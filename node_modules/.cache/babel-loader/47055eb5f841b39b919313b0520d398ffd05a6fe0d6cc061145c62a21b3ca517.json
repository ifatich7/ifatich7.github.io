{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    class: _normalizeClass([\"btn\", [`btn-${$props.type}`, `btn-${$props.size}`]]),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.handleClick && $options.handleClick(...args))\n  }, _toDisplayString($props.label), 3 /* TEXT, CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$props","type","size","onClick","_cache","args","$options","handleClick","label"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/test-vue/src/components/Button.vue"],"sourcesContent":["<template>\n    <button class=\"btn\" :class=\"[`btn-${type}`, `btn-${size}`]\" @click=\"handleClick\">\n        {{ label }}\n    </button>\n</template>\n\n<script>\n    export default {\n        props: {\n            label: String,\n            type: {\n                type: String,\n                validator(value) {\n                    return [\n                        \"primary\",\n                        \"outline-primary\",\n                        \"link\",\n                        \"tertiary\",\n                        \"secondary\",\n                    ].includes(value);\n                },\n                default: \"primary\", // Default value if not provided\n            },\n            size: {\n                type: String,\n                validator(value) {\n                    return [\"sm\", \"md\", \"lg\", \"xl\"].includes(value);\n                },\n                default: \"md\", // Default value if not provided\n            },\n        },\n        methods: {\n            handleClick() {\n                // Handle button click event\n                // You can add your custom logic here\n                this.$emit(\"click\");\n            },\n        },\n    };\n</script>\n\n<style scoped>\n    .btn {\n        /* Add your button styles here */\n        padding: 10px 20px;\n        border: none;\n        border-radius: 5px;\n        cursor: pointer;\n    }\n\n    /* Example button type styles */\n    .btn-primary {\n        background-color: blue;\n        color: white;\n    }\n\n    .btn-outline-primary {\n        background-color: transparent;\n        border: 2px solid blue;\n        color: blue;\n    }\n\n    .btn-link {\n        background-color: transparent;\n        border: none;\n        color: blue;\n        text-decoration: underline;\n    }\n\n    /* Example button size styles */\n    .btn-sm {\n        font-size: 14px;\n    }\n\n    .btn-md {\n        font-size: 16px;\n    }\n\n    .btn-lg {\n        font-size: 18px;\n    }\n\n    .btn-xl {\n        font-size: 20px;\n    }\n</style>"],"mappings":";;uBACIA,mBAAA,CAES;IAFDC,KAAK,EAAAC,eAAA,EAAC,KAAK,UAAiBC,MAAA,CAAAC,IAAI,WAAWD,MAAA,CAAAE,IAAI;IAAMC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;sBACxEL,MAAA,CAAAQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}